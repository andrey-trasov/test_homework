Базовые фильтры
Найди всех авторов с именем «John».
 Author.objects.filter(first_name="John")
<QuerySet [{'first_name': 'John', 'last_name': 'John', 'email': 'asd@gmail.com\n'}, {'first_name': 'John', 'last_name': 'John', 'email': 'qwe@gmail.com'}]>

Найди всех авторов, кроме тех, у кого фамилия «Doe».
 Author.objects.exclude(last_name="Doe")
<QuerySet [{'first_name': 'John', 'last_name': 'John', 'email': 'asd@gmail.com\n'}, {'first_name': 'John', 'last_name': 'John', 'email': 'qwe@gmail.com'}]>

Числовые сравнения
Найди все книги, цена которых меньше 500.
Book.objects.filter(price__lt=500).values()
<QuerySet [{'id': 1, 'title': 'Азбука', 'author_id': 1, 'published_date': datetime.datetime(2020, 11, 9, 21, 0, tzinfo=datetime.timezone.utc), 'price': Decimal('400.00'), 'discount': Decimal('10.00'), 'metadata': {'qwe': 123}}]>

Найди все книги с ценой не более 300.
Book.objects.filter(price__lte=300).values()
QuerySet [{'id': 1, 'title': 'Азбука', 'author_id': 1, 'published_date': datetime.datetime(2020, 11, 9, 21, 0, tzinfo=datetime.timezone.utc), 'price': Decimal('300.00'), 'discount': Decimal('10.00'), 'metadata': {'qwe': 123}}]>

Найди все книги дороже 1000.
Book.objects.filter(price__gt=1000).values()
<QuerySet [{'id': 4, 'title': 'Карта', 'author_id': 3, 'published_date': datetime.datetime(2021, 11, 9, 21, 0, tzinfo=datetime.timezone.utc), 'price': Decimal('1200.00'), 'discount': Decimal('5.00'), 'metadata': {'qwe': 123}}]>

Найди все книги с ценой от 750 и выше.
Book.objects.filter(price__gte=750).values()
<QuerySet [{'id': 3, 'title': 'Сказки', 'author_id': 2, 'published_date': datetime.datetime(2024, 11, 9, 21, 0, tzinfo=datetime.timezone.utc), 'price': Decimal('800.00'), 'discount': Decimal('3.00'), 'metadata': {'qwe': 123}}, {'id': 4, 'title': 'Карта', 'author_id': 3, 'published_date': datetime.datetime(2021, 11, 9, 21, 0, tzinfo=datetime.timezone.utc), 'price': Decimal('1200.00'), 'discount': Decimal('5.00'), 'metadata': {'qwe': 123}}]>

Поиск текста
Найди все книги, содержащие слово «django» в названии.


Найди книги, в названии которых есть «python» (без учёта регистра).


Найди книги, название которых начинается со слова «Advanced».


Найди книги, название которых начинается с «pro» (игнорируя регистр).


Найди книги, название которых заканчивается на слово «Guide».


Найди книги, название которых заканчивается на «tutorial» (без учёта регистра).


Проверка на null
Найди все отзывы без комментариев.


Найди все отзывы, у которых есть комментарий.


IN и Range
Найди авторов с идентификаторами 1, 3 и 5.


Найди книги, опубликованные с 1 января по 31 декабря 2023 года.


Регулярные выражения
Найди книги, название которых начинается со слова «Python».


Найди авторов, чья фамилия начинается на «Mc» (игнорируя регистр).


Даты и время
Найди книги, опубликованные в 2024 году.


Найди книги, опубликованные в июне.


Найди отзывы, оставленные 11-го числа любого месяца.


Найди книги, опубликованные на 23-й неделе года.


Найди отзывы, оставленные во вторник.


Найди книги, опубликованные во втором квартале года.


Найди отзывы, сделанные в определённую дату.


Найди отзывы, сделанные ровно в 15:30.


Найди отзывы, сделанные в 15 часов.


Найди отзывы, сделанные в 30 минут любого часа.


Найди отзывы, созданные в момент, когда секунды были равны 0.


Связанные поля
Найди книги, написанные автором с почтой «author@example.com».


Найди книги авторов, чья фамилия содержит «smith» (без учёта регистра).


Найди авторов, написавших более пяти книг.


JSON-поля
Найди книги, у которых значение ключа «genre» равно «fiction».


Найди книги, где значение ключа «tags» содержит слово «bestseller» (игнорируя регистр).


Использование выражений F и Q
Найди книги, у которых цена равна скидке.


Найди книги, у которых цена больше скидки.


Найди авторов с именем «Alice» или с фамилией, не равной «Brown».


Задания на аннотации
Подсчитай количество книг каждого автора.


Подсчитай средний рейтинг каждой книги.


Посчитай окончательную цену книги (цена минус скидка).


Использование select_related и prefetch_related
Получи список книг и авторов так, чтобы выполнить всего один SQL-запрос.


Получи список авторов и всех их книг так, чтобы было выполнено ровно два SQL-запроса.
